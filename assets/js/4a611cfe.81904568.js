"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3813],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),f=r,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||o;return n?a.createElement(d,i(i({ref:t},p),{},{components:n})):a.createElement(d,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1889:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var a=n(3117),r=n(102),o=(n(7294),n(3905)),i=["components"],l={title:"Format",sidebar_position:15},c=void 0,s={unversionedId:"commands/fmt",id:"commands/fmt",title:"Format",description:"Scala-cli supports formatting your code using Scalafmt:",source:"@site/docs/commands/fmt.md",sourceDirName:"commands",slug:"/commands/fmt",permalink:"/docs/commands/fmt",draft:!1,editUrl:"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/commands/fmt.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{title:"Format",sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"REPL",permalink:"/docs/commands/repl"},next:{title:"IDE Setup",permalink:"/docs/commands/setup-ide"}},p={},u=[{value:"Dialects",id:"dialects",level:3},{value:"Scalafmt version",id:"scalafmt-version",level:3}],m={toc:u};function f(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Scala-cli supports formatting your code using ",(0,o.kt)("a",{parentName:"p",href:"https://scalameta.org/scalafmt/"},"Scalafmt"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli fmt\n")),(0,o.kt)("p",null,"Under the hood, ",(0,o.kt)("inlineCode",{parentName:"p"},"scala-cli")," downloads and runs Scalafmt on your code."),(0,o.kt)("p",null,"If you\u2019re setting up a continuous integration (CI) server, ",(0,o.kt)("inlineCode",{parentName:"p"},"scala-cli")," also has you covered.\nYou can check formatting correctness using a ",(0,o.kt)("inlineCode",{parentName:"p"},"--check")," flag:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli fmt --check\n")),(0,o.kt)("h3",{id:"dialects"},"Dialects"),(0,o.kt)("p",null,"Scala-cli also supports dialects that are passed to the formatter.\nThis value is only used if there is no ",(0,o.kt)("inlineCode",{parentName:"p"},".scalafmt.conf")," file.\nHowever, if it exists, then all configuration should be placed there.\nFor a list of all possible values, consult the ",(0,o.kt)("a",{parentName:"p",href:"https://scalameta.org/scalafmt/docs/configuration.html#scala-dialects"},"official Scala Dialects documentation"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli fmt --dialect scala212\n")),(0,o.kt)("h3",{id:"scalafmt-version"},"Scalafmt version"),(0,o.kt)("p",null,"At this time, ",(0,o.kt)("inlineCode",{parentName:"p"},"scala-cli")," read a ",(0,o.kt)("inlineCode",{parentName:"p"},"scalafmt")," version from ",(0,o.kt)("inlineCode",{parentName:"p"},".scalafmt.conf")," files. If the version is missing, ",(0,o.kt)("inlineCode",{parentName:"p"},"scala-cli")," throws an error, that user should declare explicitly the Scalafmt version. From Scalafmt ",(0,o.kt)("inlineCode",{parentName:"p"},"3.5.0")," it is a mandatory parameter."),(0,o.kt)("p",null,"To configure the Scalafmt version add the following config into ",(0,o.kt)("inlineCode",{parentName:"p"},".scalafmt.conf"),". For example, to set version ",(0,o.kt)("inlineCode",{parentName:"p"},"3.5.0")," you should add the following line:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'version = "3.5.0"\n')))}f.isMDXComponent=!0}}]);